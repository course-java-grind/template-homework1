name: Perplexity AI Code Reviewer for Autotesting

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install axios
        run: npm install axios

      - name: Perplexity Code Review and Comment
        uses: actions/github-script@v7
        with:
          script: |
            const axios = require('axios');
            const prNumber = context.payload.pull_request.number;
            
            // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è diff
            const diffResponse = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              mediaType: {
                format: 'diff'
              }
            });
            
            const codeDiff = diffResponse.data.substring(0, 4000);
            
            const prompt = `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç diff –∫–æ–¥–∞ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (Java, Selenium, WireMock, Jenkins, Postman API).
              –ù–∞–π–¥–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ assertions, driver.quit(), mocks teardown, API responses.
              –ü—Ä–æ–≤–µ—Ä—å best practices: Page Object, error handling, CI/CD –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è. 
              Diff: ${codeDiff}`;
            
            try {
              const response = await axios.post(
                'https://api.perplexity.ai/chat/completions',
                {
                  model: 'sonar-pro',  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
                  messages: [{ role: 'user', content: prompt }],
                  max_tokens: 1500,
                  temperature: 0.1
                },
                {
                  headers: { 
                    'Authorization': `Bearer ${process.env.PPLX_API_KEY}`,
                    'Content-Type': 'application/json'
                  }
                }
              );
              
              const review = response.data.choices[0].message.content;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `### ü§ñ Perplexity AI Code Review\n\n${review}`
              });
            } catch (error) {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ Perplexity API:', error.response?.data || error.message);
              throw error;
            }
        env:
          PPLX_API_KEY: ${{ secrets.PPLX_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
